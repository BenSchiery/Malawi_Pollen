rm(list = ls())
graphics.off()

library(vegan)
library(MASS)
# load the pollen data
poln.full <- read.csv("./data/20200626_pollen.csv")

# load interpolated data generated by code from Malawi_interpolation.R
# choose which interpolation method to use:
## linearly interpolated data:
lake.full <- read.csv("./data/lake_linterp.csv")
char.full <- read.csv("./data/char_linterp.csv")

## Krig interpolated data:
lake.full <- read.csv("./data/lake_Krig.csv")
char.full <- read.csv("./data/char_Krig.csv")

# split the loaded data to mix and match as needed
age <- lake.full[,"age"] # everything should have the same ages
char <- char.full[,"charcoal"]
lake <- -1*lake.full[,"lake"]
poln <- poln.full[,c("Poaceae", "Podocarpus", "miombo", "olea")]
astr <- poln.full[,"asters"]

# a data.frame of data to be used in the vector fit
to.be.fit <- data.frame("age" = age,
                        "charcoal" = char,
                        "lake" = lake,
                        "asters" = astr)

# scale and center the datasets
poln.std <- vegan::decostand(x = poln,
                             method = "chi.square") # approximates chisquare distance
to.be.fit.std <- scale(x = to.be.fit)

# make distance matrices
poln.dist <- dist(poln.std)
#poln.dist <- vegdist(poln, method = "canberra")

# don't need this. The "to be fit data" does not need to be a D matrix.
#to.be.fit.dist <- dist(to.be.fit.std, method = "canberra")

# make the pollen ordination
poln.ord <- cmdscale(d = poln.dist, k = 2, eig = T, add = F, x.ret = F)

#############################
#	NMDS
poln.ord<- metaMDS(poln.ord$points, k=2, distance='euclidean', autotransform=F)
#poln.ord<-isoMDS(poln.dist, y = cmdscale(d = poln.dist, k = 2, eig = T, add = F, x.ret = F)$points, k = 2, maxit = 50, trace = TRUE,
#       tol = 1e-3, p = 2)

#Shepard(poln.dist, poln.ord, p = 2)

###########################

# do the vector fit(s) of the data to our ordination
poln.fit <- vegan::envfit(ord = poln.ord,
                          env = poln.std,
                          permutaions = 10000)
add.fit <- vegan::envfit(ord = poln.ord,
                         env = to.be.fit.std,
                         permutaions = 10000)

# plot the results of the vector fits
  # color ages > 400 in red
    col<-rep("black", length(age))
    col[which(age>=400)]<-"red"
##########################################
plot(poln.ord$points, pch = 16, type="n")
plot(poln.fit, col = "red")
plot(add.fit, col = "blue")
text(poln.ord$points, labels=round(age), cex=.5, col=col)
# ordination surfaces
# ordisurf(x = poln.ord, y = age, main = "Age (kyr)", add=TRUE, col="orange", nlevels = 50
#         , knots=300)
# ordisurf(x = poln.ord, y = char, main = "Charcoal", add=TRUE, col="gray", nlevels = 50)
ordisurf(x = poln.ord, y = lake, main = "Lake Level", add=TRUE, col="orange", nlevels = 50
         , knots=30)
#ordisurf(x = poln.ord, y = astr, main = "Asteraceae")

